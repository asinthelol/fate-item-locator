@import "../../../scss/globals.scss";

@keyframes increaseWidth {
  from { width: 0; }
  to { width: 100%; }
}

#table {
  position: relative;
  width: 52rem;
  border-collapse: collapse;
  border-radius: 1rem;
  overflow: hidden;
  background-color: $foreground-color;

  thead { background-color: $foreground-color-dark; }

  #table-keys-holder,
  .table-values-holder {
    position: relative;
    height: 3rem;
  }

  .table-values-holder {
    background-color: $foreground-color;
    transition: background-color $transition-duration ease;
    

    &:nth-of-type(even) {
      background-color: $foreground-color-dark;

      &:hover { background-color: $foreground-color-dark-hover; }
    }

    &:hover {
      background-color: $foreground-color-light;

      // Specific width so that it can line up with the anchor tag width.
      // It mostly lines up. Like it's only off by less than a pixel.
      .table-value:nth-of-type(2)::before { width: 86%; } 
      
    }

    .table-value:nth-of-type(2)::before {
        pointer-events: none;
        content: "";
        position: absolute;
        left: 50%;
        right: 50%;
        bottom: 0;
        transform: translateX(-50%);
        width: 0;
        height: 100%;
        border-bottom: thin solid $text-color;
        transition: width $transition-duration ease;
    }

    a {
      text-decoration: none;
      @include flex;
      width: 100%;
      height: 3rem;
    }
  }

  .table-key,
  .table-value {
    text-align: center;
    height: 100%;
    padding: 0 1rem;

    &:last-of-type { border-right: none; }
    &:first-of-type, &:nth-of-type(2) { width: 14rem; }
  }
}

@media screen and (max-width: $landscape-breakpoint){
  #table {
    .table-key {
      height: 2rem;
    }
  }
}

@media screen and (max-width: $mobile-breakpoint){
  #table {
    width: fit-content;
    overflow-x: auto;

    .table-key,
    .table-value {
      padding: 0.5rem;
      font-size: 0.8rem;
      word-break: break-word;
      width: 9rem;
      
      &:first-of-type {
        position: sticky;
        left: 0;
        right: 0;
        z-index: 1;
        width: 9.5rem;
        background-color: inherit;
      }

      &:nth-of-type(2) { width: 9rem; }
    }

    .table-key:first-of-type {
      background-color: $foreground-color-dark;
    }

    .table-values-holder {
      height: auto;

      .table-value {
        height: auto;
        padding: 0.5rem;

        a {
          height: auto;
        }
      }

      .table-value:nth-of-type(2)::before {
        display: none;
    }
    }
  }
}